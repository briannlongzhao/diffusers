description: imagenet dreambooth

target:
  service: sing
#  service: amlk8s
#  name: msroctovc  # sing
  name: msrresrchvc  # sing
#  name: itplabrr1cl1  # amlk8s
#  name: itphyoerbj1cl1  # amlk8s

environment:
  image: amlt-sing/pytorch-1.11.0-cuda11.6
  setup:
  - conda create -n diffusers python=3.10 -y
  - conda init $$(basename $$SHELL)
  - source $$(conda info --base)/etc/profile.d/conda.sh
  - conda activate diffusers
  - pip install -r requirements.txt
  - pip install diffusers

code:
  local_dir: $CONFIG_DIR

#storage:
#  blob:
#    storage_account_name: yunhao
#    container_name: contextaug

#data:
#  local_dir: /lab/briannlz/SDCoOp/pretrained
#  remote_dir: .

search:
  job_template:
    name: "ImageNet dreambooth generate {random_string:s}"
    submit_args:
        max_run_duration_seconds: 1209600
    sku: 16G1-P100
    command:
    - conda init $$(basename $$SHELL)
    - source $$(conda info --base)/etc/profile.d/conda.sh
    - conda activate diffusers
    - huggingface-cli login --token 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
    - accelerate launch --mixed_precision=fp16 examples/dreambooth/train_dreambooth.py
      --pretrained_model_name_or_path=stabilityai/stable-diffusion-2-1
      --instance_data_dir=/mnt/default/imagenet/images/train_medium
      --output_dir=/mnt/default/dreambooth_models_medium/ 
      --instance_prompt="a photo of sks"
      --gradient_accumulation_steps=1
      --learning_rate=5e-6
      --lr_scheduler="constant"
      --lr_warmup_steps=0
      --num_train_epochs=5
      --use_8bit_adam
      --gradient_checkpointing
      --mixed_precision=fp16
      --train_batch_size=4
      --push_to_hub
      --idx={idx}
    - python examples/dreambooth/inference.py
      --model_path=/mnt/default/dreambooth_models_medium/
      --prompt="a photo of sks"
      --save_dir=/mnt/default/dreambooth_output_medium/
      --num_images=1300
      --idx={idx}
  type: grid
  max_trials: 100
  params:
    - name: idx
      values: choice(range(100))
